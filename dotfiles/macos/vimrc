"git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'         " let Vundle manage Vundle, required
Plugin 'dikiaap/minimalist'           " minimalist color-scheme.
Plugin 'vim-syntastic/syntastic'      " check syntax on each save
Plugin 'sheerun/vim-polyglot'         " a collection of language packs
Plugin 'fatih/vim-go'                 " golang official plugin
"Plugin 'vim-scripts/indentpython.vim' " fixes autoindent behavior
"Plugin 'davidhalter/jedi-vim'         " understands most of Python's core features
"Plugin 'nvie/vim-flake8'              " PEP8 checking
"Plugin 'Valloric/YouCompleteMe'       " code completion engine
                                       " doesnt work on mac properly
"Plugin 'rust-lang/rust.vim'           " vim configuration for rust
call vundle#end()

""""""""""""""""""""""
"      Settings      "
""""""""""""""""""""""
" Colorscheme
set t_Co=256
colorscheme minimalist

set term=builtin_xterm 
syntax on                       " enable syntax highlighting

set omnifunc=syntaxcomplete#Complete
autocmd FileType python setlocal completeopt-=preview " disable the docstring
                                                      " window to popup
                                                      " during completion

"let python_highlight_all=1      " enable python syntax highlighting features

set nocompatible                " Enables us Vim specific features
filetype off                    " Reset filetype detection first ...
filetype plugin indent on       " ... and enable filetype detection
set tabstop=4                   " set tabs to have 4 spaces
set shiftwidth=4                " when using the >> or << commands,
                                " shift lines by 4 spaces
set expandtab                   " expand tabs into spaces
set smarttab 
set smartindent
set number                      " show line numbers
set relativenumber              " each line in a file is numbered relative
                                " to the cursor’s current position to show
                                " the distance to that line
set showmatch                   " show the matching part
                                " of the pair for [] {} and ()
set cursorline                  " show a visual line under the cursor's current line
set fileformat=unix             " store the file in a Unix format
set textwidth=72                " ensure your line length doesn’t
                                " go beyond 72 characters
set encoding=utf-8              " using utf-8 when working with python
set ruler		                " show the cursor position all the time
set history=50		            " keep 50 lines of command line history
set viminfo='20,\"50	        " read/write a .viminfo file, don't store more
			                    " than 50 lines of registers
set bs=indent,eol,start		    " allow backspacing over everything in insert mode
set noswapfile                  " don't use swapfile
set nobackup                    " don't create backup files
set showcmd                     " show what i'm typing

set hlsearch                    " enable highlight searched patterns
highlight Search ctermbg=black ctermfg=red

set laststatus=2                " show status line always
set statusline=%<%F%=\ [%1*%M%*%n%R%H]\ %-19(%3l.%02c%03V%)%-6(%p%%%)%O'%02b'

"""""""""""""""""""""
"      Plugins      "
"""""""""""""""""""""
" go.vim
let g:go_fmt_command = "goimports"
let g:go_autodetect_gopath = 1
let g:go_list_type = "quickfix"

let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_generate_tags = 1

" minimalist color scheme
let g:airline_theme='minimalist'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1

" rust.vim
"let g:rustfmt_autosave = 1

" syntastic syntax checker
"let g:syntastic_python_checkers = ['flake8', 'pyflakes']

""""""""""""""""""""""
"      Mappings      "
""""""""""""""""""""""
nnoremap <Space> :w!<CR>
nnoremap ,b :ls<CR>:buffer<Space>
nnoremap ,c :%s/\< \>/ /g
nnoremap ,<space> :nohlsearch<CR>
nnoremap ~ %

inoremap ( ()<Left>
inoremap [ []<Left>
inoremap { {}<Left>
inoremap " ""<Left>
inoremap ' ''<Left>
inoremap ` ``<Left>

" search mappings: these will make it so that going to the
" next one in a search will center on the line it's found in.
nnoremap n nzzzv
nnoremap N Nzzzv

" when long lines inserted j k moves one physical line
" gj gk moves down one displayed line
noremap <Up> gk
noremap <Down> gj
noremap j gj
noremap k gk

" do not show q: window
map q: :q
